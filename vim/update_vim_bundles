#!/usr/bin/env ruby

require 'fileutils'
include FileUtils

BUNDLE_DIR = File.expand_path('../bundle', __FILE__)
BUNDLE_FILE = File.expand_path('../bndls.txt', __FILE__)

def github(line)
  re = %r'/([^/]*)$'
  name = line[re, 1]
  url = line

  path = File.expand_path(name, BUNDLE_DIR)

  # pull if repo already exists
  if File.exists?(path)
    puts "Pulling from #{url}.."
    cd(path) {`git pull`} 
    return
  end

  # url must start with git://
  url =~ /^git/ or url.gsub!(/^http/, 'git')

  puts "Cloning from #{url}.."
  `git clone #{url} #{path}`
end

def vim(line)
  line =~ /#/ or raise SyntaxError, "FATAL: No name found in #{line}!"

  re = /^(.*)#(.*)#(.*)$/
  url  = line[re, 1]
  name = line[re, 2]
  type = line[re, 3]

  path = File.expand_path("#{name}/#{type}/#{name}.vim", BUNDLE_DIR)
  unless File.exists? path
    puts "Downloading #{url}.."
    `curl -s -o #{path} --create-dirs #{url}` 
  end
end

$methods = {
  :github => /github\.com/,
  :vim => /download_script/
}

def install(line)
  # call corresponding method according to url pattern
  $methods.each do |meth, regex|
    regex =~ line and return send meth, line
  end
end

# Fetch and install
File.open(BUNDLE_FILE, "r") do |infile|
  until infile.eof?
    install infile.gets.strip
  end
end

# Build extensions
pattern = File.join(BUNDLE_DIR, "*", "ruby", "*", "extconf.rb")
Dir.glob(pattern).each do |path|
  path.slice!(%r'/([^/]*)$')
  cd(path) do
    puts "Building #{path}..."
    `/usr/bin/ruby extconf.rb`
    `make`
  end
end
