#!/usr/bin/env bash

# general
alias ls='ls -p -G'
alias ll='ls -l -h'
alias blt="vim $HOME/dotfiles/bash; source $HOME/dotfiles/bashrc"
alias dotfiles="vim $HOME/dotfiles"
alias t250='tail -n250'
alias xee='open -a xee'
alias findswp='find . -name "*.swp"'
alias rmswp='find . -name "*.swp" -exec rm {} \;'
alias vi='vim --noplugin'
alias notes='vim ~/notes.md'
alias flushcache='dscacheutil -flushcache && sudo killall -HUP mDNSResponder'
alias hosts='sudo vim /etc/hosts && flushcache'
alias sed_trailing_spaces="sed -E -i '.sed' -e 's/[[:space:]]+$//'" # bsd
alias tmuxw='tmux new -s w'
alias ed='emacs --daemon'
alias e='emacsclient -nw'
alias v=vagrant
alias d=docker
alias a=ansible
alias ap=ansible-playbook

# git
alias g='git status'
alias gst='git status'
alias gf='git fetch'
alias gm='git merge'
alias ga='git add'
alias gb='git branch'
alias gc='git commit'
alias gck='git checkout'
alias gd='git diff'
alias gca='git commit -a'
alias gcaa='git commit -a --amend -C HEAD'
alias gg='git grep'
alias glo='git log'
alias gl='git pull'
alias gp='git push'

# clojure
alias cljs='lein trampoline cljsbuild'

# ruby
alias ss='script/server'
alias sg='shotgun --host 0.0.0.0 config.ru'
alias sgbg='shotgun --host 0.0.0.0 config.ru &> /dev/null &'
alias b='bundle exec'
alias reindex='rails runner script/reindex.rb'
alias remove_all_gems='gem list | cut -d" " -f1 | xargs gem uninstall -aIx'
alias rvmrc='rvm rvmrc'
alias ng-serverjruby='JRUBY_OPTS="" jruby --ng-server'

# python
alias p='python'
alias json='python -m json.tool'
alias venv='source bin/activate'

# java
alias javassert='java -enableassertions'
alias tcpmon='java org.apache.axis.utils.tcpmon'
alias adminclient='java org.apache.axis.client.AdminClient'
alias javaproxy='java -Dhttp.proxyHost=localhost -Dhttp.proxyPort=8080'
alias eclimd='$ECLIPSE_HOME/eclimd'

# php
alias sf='php symfony'
alias sf2='php app/console'

# coffeescript
alias coffeec='find . -name "*.coffee" | xargs coffee -w -c'

function uri () {
    echo $1 | ruby -p -e 'require "uri";$_=URI.encode($_.strip)'
}

function mergedeveloptag () {
  sh <<EOF
    set -e -x

    last=$(git tag -l | tail -n1)
    if [ -z $last ]; then
      echo "No tags found"
      exit 1
    fi
    echo "unfinished"
    exit 1

    git merge develop
    git tag $next

    set +e
EOF
}
